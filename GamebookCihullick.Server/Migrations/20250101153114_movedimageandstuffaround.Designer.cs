// <auto-generated />
using GamebookCihullick.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamebookCihullick.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250101153114_movedimageandstuffaround")]
    partial class movedimageandstuffaround
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GamebookCihullick.Server.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AchievementID");

                    b.ToTable("Achievement");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<bool?>("IsEdible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NutritionalValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.LocationConnection", b =>
                {
                    b.Property<int>("LocationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectedLocationID")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocationID", "ConnectedLocationID");

                    b.HasIndex("ConnectedLocationID");

                    b.ToTable("LocationConnections");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.NPC", b =>
                {
                    b.Property<int>("NPCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dialog")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<int>("LocationID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RequiredItemID")
                        .HasColumnType("INTEGER");

                    b.HasKey("NPCID");

                    b.HasIndex("LocationID");

                    b.HasIndex("RequiredItemID");

                    b.ToTable("NPCs");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.LocationConnection", b =>
                {
                    b.HasOne("GamebookCihullick.Server.Models.Location", "ConnectedLocation")
                        .WithMany()
                        .HasForeignKey("ConnectedLocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GamebookCihullick.Server.Models.Location", "Location")
                        .WithMany("Connections")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConnectedLocation");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.NPC", b =>
                {
                    b.HasOne("GamebookCihullick.Server.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamebookCihullick.Server.Models.Item", "RequiredItem")
                        .WithMany()
                        .HasForeignKey("RequiredItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("RequiredItem");
                });

            modelBuilder.Entity("GamebookCihullick.Server.Models.Location", b =>
                {
                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
